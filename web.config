<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections />
  <connectionStrings>
    <!-- <add name="DMTracking.Properties.Settings.DMTrackingConnectionString"
      connectionString="Data Source=hq-sql-bi;Initial Catalog=DMTracking;Integrated Security=True"
      providerName="System.Data.SqlClient" /> -->
    <!-- <add name="DMTracking.Properties.Settings.DMTrackingConnectionStringDEV"
      connectionString="Data Source=hq-sql-bi-dev;Initial Catalog=DMTracking;Integrated Security=True"
      providerName="System.Data.SqlClient" /> -->
    <!-- <add name="DMTracking.Properties.Settings.VoyagerXConnectionString"
      connectionString="Data Source=hq-sql-bi;Initial Catalog=VoyagerX;Integrated Security=True"
      providerName="System.Data.SqlClient" /> -->
    <!-- <add name="DMTracking.Properties.Settings.VoyagerXConnectionStringDEV"
      connectionString="Data Source=hq-sql-bi-dev;Initial Catalog=VoyagerX;Integrated Security=True"
      providerName="System.Data.SqlClient" /> -->
  </connectionStrings>
  <startup />
  <appSettings>
    <add key="TelerikWinFormsThemeName" value="Fluent"></add>
    <add key="ClientSettingsProvider.ServiceUri" value=""></add>
  </appSettings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <system.webServer>
    <!-- https://learn.microsoft.com/en-us/troubleshoot/developer/webapps/iis/health-diagnostic-performance/http-403-14-forbidden-webpage -->
    <!-- <directoryBrowse enabled="true" /> -->
    <directoryBrowse enabled="false" />
    <!-- http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx -->
    <webSocket enabled="false" />
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
    <httpPlatform stdoutLogEnabled="false" 
      stdoutLogFile=".\node.log" startupTimeLimit="20" processPath="C:\Program Files\nodejs\node.exe" arguments=".\server.js">
      <environmentVariables>
        <environmentVariable name="PORT" value="%HTTP_PLATFORM_PORT%" />
        <!-- <environmentVariable name="NODE_ENV" value="Production" /> -->
      </environmentVariables>
    </httpPlatform>

    <rewrite>
      <rules>
        <clear />
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="false">
          <match url="^server.js\/debug[\/]?" />
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false" />
        </rule>

        <!-- The next two rules actually launch the app -->
        <rule name="StaticContent">
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false" />
          <action type="Rewrite" url="public{REQUEST_URI}" />
        </rule>
        <rule name="DynamicContent">
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>

        <!-- Do not interfere with requests for node-inspector debugging -->
        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <!-- All other URLs are mapped to the node.js site entry point -->
      </rules>
    </rewrite>

    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!-- <iisnode node_env="production" /> -->
    <iisnode node_env="development" loggingEnabled="false" debuggingEnabled="true" />
      <modules>
        <add name="UriCacheModule" />
        <add name="FileCacheModule" />
        <add name="TokenCacheModule" />
        <add name="TracingModule" />
        <add name="RequestMonitorModule" />
        <add name="ManagedEngine64" preCondition="integratedMode,runtimeVersionv2.0,bitness64,winx86_64" />
        <add name="ManagedEngine" preCondition="integratedMode,runtimeVersionv2.0,bitness32,winx86_64" />
        <add name="ManagedEngineV4.0_32bit" preCondition="integratedMode,runtimeVersionv4.0,bitness32,winx86_64" />
        <add name="ManagedEngineV4.0_64bit" preCondition="integratedMode,runtimeVersionv4.0,bitness64,winx86_64" />
      </modules>
  </system.webServer>
</configuration>
